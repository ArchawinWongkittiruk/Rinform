/*
 * generated by Xtext 2.20.0
 */
grammar InternalRinform;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package uk.ac.kcl.mde.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.kcl.mde.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import uk.ac.kcl.mde.services.RinformGrammarAccess;

}
@parser::members {
	private RinformGrammarAccess grammarAccess;

	public void setGrammarAccess(RinformGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleReverseInformProgram
entryRuleReverseInformProgram
:
{ before(grammarAccess.getReverseInformProgramRule()); }
	 ruleReverseInformProgram
{ after(grammarAccess.getReverseInformProgramRule()); } 
	 EOF 
;

// Rule ReverseInformProgram
ruleReverseInformProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReverseInformProgramAccess().getSentencesAssignment()); }
		(rule__ReverseInformProgram__SentencesAssignment)*
		{ after(grammarAccess.getReverseInformProgramAccess().getSentencesAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSentencePart
entryRuleSentencePart
:
{ before(grammarAccess.getSentencePartRule()); }
	 ruleSentencePart
{ after(grammarAccess.getSentencePartRule()); } 
	 EOF 
;

// Rule SentencePart
ruleSentencePart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSentencePartAccess().getAlternatives()); }
		(rule__SentencePart__Alternatives)
		{ after(grammarAccess.getSentencePartAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRoomDeclaration
entryRuleRoomDeclaration
:
{ before(grammarAccess.getRoomDeclarationRule()); }
	 ruleRoomDeclaration
{ after(grammarAccess.getRoomDeclarationRule()); } 
	 EOF 
;

// Rule RoomDeclaration
ruleRoomDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoomDeclarationAccess().getGroup()); }
		(rule__RoomDeclaration__Group__0)
		{ after(grammarAccess.getRoomDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRoomDescription
entryRuleRoomDescription
:
{ before(grammarAccess.getRoomDescriptionRule()); }
	 ruleRoomDescription
{ after(grammarAccess.getRoomDescriptionRule()); } 
	 EOF 
;

// Rule RoomDescription
ruleRoomDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoomDescriptionAccess().getGroup()); }
		(rule__RoomDescription__Group__0)
		{ after(grammarAccess.getRoomDescriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItemDeclaration
entryRuleItemDeclaration
:
{ before(grammarAccess.getItemDeclarationRule()); }
	 ruleItemDeclaration
{ after(grammarAccess.getItemDeclarationRule()); } 
	 EOF 
;

// Rule ItemDeclaration
ruleItemDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemDeclarationAccess().getGroup()); }
		(rule__ItemDeclaration__Group__0)
		{ after(grammarAccess.getItemDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItemDescription
entryRuleItemDescription
:
{ before(grammarAccess.getItemDescriptionRule()); }
	 ruleItemDescription
{ after(grammarAccess.getItemDescriptionRule()); } 
	 EOF 
;

// Rule ItemDescription
ruleItemDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemDescriptionAccess().getGroup()); }
		(rule__ItemDescription__Group__0)
		{ after(grammarAccess.getItemDescriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirectionStatement
entryRuleDirectionStatement
:
{ before(grammarAccess.getDirectionStatementRule()); }
	 ruleDirectionStatement
{ after(grammarAccess.getDirectionStatementRule()); } 
	 EOF 
;

// Rule DirectionStatement
ruleDirectionStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectionStatementAccess().getGroup()); }
		(rule__DirectionStatement__Group__0)
		{ after(grammarAccess.getDirectionStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleText
entryRuleText
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextAccess().getGroup()); }
		(rule__Text__Group__0)
		{ after(grammarAccess.getTextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWords
entryRuleWords
:
{ before(grammarAccess.getWordsRule()); }
	 ruleWords
{ after(grammarAccess.getWordsRule()); } 
	 EOF 
;

// Rule Words
ruleWords 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getWordsAccess().getWordsAssignment()); }
			(rule__Words__WordsAssignment)
			{ after(grammarAccess.getWordsAccess().getWordsAssignment()); }
		)
		(
			{ before(grammarAccess.getWordsAccess().getWordsAssignment()); }
			(rule__Words__WordsAssignment)*
			{ after(grammarAccess.getWordsAccess().getWordsAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSymbol
entryRuleSymbol
:
{ before(grammarAccess.getSymbolRule()); }
	 ruleSymbol
{ after(grammarAccess.getSymbolRule()); } 
	 EOF 
;

// Rule Symbol
ruleSymbol 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSymbolAccess().getSymbolAssignment()); }
		(rule__Symbol__SymbolAssignment)
		{ after(grammarAccess.getSymbolAccess().getSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Direction
ruleDirection
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionAccess().getAlternatives()); }
		(rule__Direction__Alternatives)
		{ after(grammarAccess.getDirectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SentencePart__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSentencePartAccess().getRoomDeclarationParserRuleCall_0()); }
		ruleRoomDeclaration
		{ after(grammarAccess.getSentencePartAccess().getRoomDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSentencePartAccess().getRoomDescriptionParserRuleCall_1()); }
		ruleRoomDescription
		{ after(grammarAccess.getSentencePartAccess().getRoomDescriptionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSentencePartAccess().getItemDeclarationParserRuleCall_2()); }
		ruleItemDeclaration
		{ after(grammarAccess.getSentencePartAccess().getItemDeclarationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSentencePartAccess().getItemDescriptionParserRuleCall_3()); }
		ruleItemDescription
		{ after(grammarAccess.getSentencePartAccess().getItemDescriptionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getSentencePartAccess().getWordsParserRuleCall_4()); }
		ruleWords
		{ after(grammarAccess.getSentencePartAccess().getWordsParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getSentencePartAccess().getSymbolParserRuleCall_5()); }
		ruleSymbol
		{ after(grammarAccess.getSentencePartAccess().getSymbolParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getSentencePartAccess().getDirectionStatementParserRuleCall_6()); }
		ruleDirectionStatement
		{ after(grammarAccess.getSentencePartAccess().getDirectionStatementParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Symbol__SymbolAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolAccess().getSymbolFullStopKeyword_0_0()); }
		'.'
		{ after(grammarAccess.getSymbolAccess().getSymbolFullStopKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSymbolAccess().getSymbolCommaKeyword_0_1()); }
		','
		{ after(grammarAccess.getSymbolAccess().getSymbolCommaKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSymbolAccess().getSymbolSemicolonKeyword_0_2()); }
		';'
		{ after(grammarAccess.getSymbolAccess().getSymbolSemicolonKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getSymbolAccess().getSymbolColonKeyword_0_3()); }
		':'
		{ after(grammarAccess.getSymbolAccess().getSymbolColonKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getSymbolAccess().getSymbolHyphenMinusKeyword_0_4()); }
		'-'
		{ after(grammarAccess.getSymbolAccess().getSymbolHyphenMinusKeyword_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getSymbolAccess().getSymbolExclamationMarkKeyword_0_5()); }
		'!'
		{ after(grammarAccess.getSymbolAccess().getSymbolExclamationMarkKeyword_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getSymbolAccess().getSymbolQuestionMarkKeyword_0_6()); }
		'?'
		{ after(grammarAccess.getSymbolAccess().getSymbolQuestionMarkKeyword_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getSymbolAccess().getSymbolApostropheKeyword_0_7()); }
		'\''
		{ after(grammarAccess.getSymbolAccess().getSymbolApostropheKeyword_0_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionAccess().getSouthEnumLiteralDeclaration_0()); }
		('South')
		{ after(grammarAccess.getDirectionAccess().getSouthEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionAccess().getNorthEnumLiteralDeclaration_1()); }
		('North')
		{ after(grammarAccess.getDirectionAccess().getNorthEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionAccess().getEastEnumLiteralDeclaration_2()); }
		('East')
		{ after(grammarAccess.getDirectionAccess().getEastEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionAccess().getWestEnumLiteralDeclaration_3()); }
		('West')
		{ after(grammarAccess.getDirectionAccess().getWestEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionAccess().getBelowEnumLiteralDeclaration_4()); }
		('Below')
		{ after(grammarAccess.getDirectionAccess().getBelowEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionAccess().getAboveEnumLiteralDeclaration_5()); }
		('Above')
		{ after(grammarAccess.getDirectionAccess().getAboveEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoomDeclaration__Group__0__Impl
	rule__RoomDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomDeclarationAccess().getRKeyword_0()); }
	'-r'
	{ after(grammarAccess.getRoomDeclarationAccess().getRKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoomDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomDeclarationAccess().getNameAssignment_1()); }
	(rule__RoomDeclaration__NameAssignment_1)
	{ after(grammarAccess.getRoomDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoomDescription__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoomDescription__Group__0__Impl
	rule__RoomDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomDescription__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomDescriptionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getRoomDescriptionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomDescription__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoomDescription__Group__1__Impl
	rule__RoomDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomDescription__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRoomDescriptionAccess().getRoomDescriptionAssignment_1()); }
		(rule__RoomDescription__RoomDescriptionAssignment_1)
		{ after(grammarAccess.getRoomDescriptionAccess().getRoomDescriptionAssignment_1()); }
	)
	(
		{ before(grammarAccess.getRoomDescriptionAccess().getRoomDescriptionAssignment_1()); }
		(rule__RoomDescription__RoomDescriptionAssignment_1)*
		{ after(grammarAccess.getRoomDescriptionAccess().getRoomDescriptionAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomDescription__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoomDescription__Group__2__Impl
	rule__RoomDescription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomDescription__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomDescriptionAccess().getRKeyword_2()); }
	'-r'
	{ after(grammarAccess.getRoomDescriptionAccess().getRKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomDescription__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoomDescription__Group__3__Impl
	rule__RoomDescription__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomDescription__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomDescriptionAccess().getRoomAssignment_3()); }
	(rule__RoomDescription__RoomAssignment_3)
	{ after(grammarAccess.getRoomDescriptionAccess().getRoomAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomDescription__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoomDescription__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomDescription__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomDescriptionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getRoomDescriptionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemDeclaration__Group__0__Impl
	rule__ItemDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemDeclarationAccess().getIKeyword_0()); }
	'-i'
	{ after(grammarAccess.getItemDeclarationAccess().getIKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemDeclaration__Group__1__Impl
	rule__ItemDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemDeclarationAccess().getNameAssignment_1()); }
	(rule__ItemDeclaration__NameAssignment_1)
	{ after(grammarAccess.getItemDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemDeclaration__Group__2__Impl
	rule__ItemDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemDeclarationAccess().getHyphenMinusKeyword_2()); }
	'-'
	{ after(grammarAccess.getItemDeclarationAccess().getHyphenMinusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemDeclarationAccess().getRoomAssignment_3()); }
	(rule__ItemDeclaration__RoomAssignment_3)
	{ after(grammarAccess.getItemDeclarationAccess().getRoomAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemDescription__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemDescription__Group__0__Impl
	rule__ItemDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDescription__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemDescriptionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getItemDescriptionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDescription__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemDescription__Group__1__Impl
	rule__ItemDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDescription__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getItemDescriptionAccess().getItemDescriptionAssignment_1()); }
		(rule__ItemDescription__ItemDescriptionAssignment_1)
		{ after(grammarAccess.getItemDescriptionAccess().getItemDescriptionAssignment_1()); }
	)
	(
		{ before(grammarAccess.getItemDescriptionAccess().getItemDescriptionAssignment_1()); }
		(rule__ItemDescription__ItemDescriptionAssignment_1)*
		{ after(grammarAccess.getItemDescriptionAccess().getItemDescriptionAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDescription__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemDescription__Group__2__Impl
	rule__ItemDescription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDescription__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemDescriptionAccess().getIKeyword_2()); }
	'-i'
	{ after(grammarAccess.getItemDescriptionAccess().getIKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDescription__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemDescription__Group__3__Impl
	rule__ItemDescription__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDescription__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemDescriptionAccess().getItemAssignment_3()); }
	(rule__ItemDescription__ItemAssignment_3)
	{ after(grammarAccess.getItemDescriptionAccess().getItemAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDescription__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemDescription__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDescription__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemDescriptionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getItemDescriptionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectionStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectionStatement__Group__0__Impl
	rule__DirectionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectionStatementAccess().getLessThanSignKeyword_0()); }
	'<'
	{ after(grammarAccess.getDirectionStatementAccess().getLessThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectionStatement__Group__1__Impl
	rule__DirectionStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectionStatementAccess().getRoom1Assignment_1()); }
	(rule__DirectionStatement__Room1Assignment_1)
	{ after(grammarAccess.getDirectionStatementAccess().getRoom1Assignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectionStatement__Group__2__Impl
	rule__DirectionStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectionStatementAccess().getDirectionAssignment_2()); }
	(rule__DirectionStatement__DirectionAssignment_2)
	{ after(grammarAccess.getDirectionStatementAccess().getDirectionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectionStatement__Group__3__Impl
	rule__DirectionStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectionStatementAccess().getRoom2Assignment_3()); }
	(rule__DirectionStatement__Room2Assignment_3)
	{ after(grammarAccess.getDirectionStatementAccess().getRoom2Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectionStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectionStatementAccess().getGreaterThanSignKeyword_4()); }
	'>'
	{ after(grammarAccess.getDirectionStatementAccess().getGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__0__Impl
	rule__Text__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getTextAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getGroup_1()); }
	(rule__Text__Group_1__0)*
	{ after(grammarAccess.getTextAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group_1__0__Impl
	rule__Text__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getWSTerminalRuleCall_1_0()); }
	RULE_WS
	{ after(grammarAccess.getTextAccess().getWSTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getTextAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReverseInformProgram__SentencesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReverseInformProgramAccess().getSentencesSentencePartParserRuleCall_0()); }
		ruleSentencePart
		{ after(grammarAccess.getReverseInformProgramAccess().getSentencesSentencePartParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomDeclarationAccess().getNameTextParserRuleCall_1_0()); }
		ruleText
		{ after(grammarAccess.getRoomDeclarationAccess().getNameTextParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomDescription__RoomDescriptionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomDescriptionAccess().getRoomDescriptionTextParserRuleCall_1_0()); }
		ruleText
		{ after(grammarAccess.getRoomDescriptionAccess().getRoomDescriptionTextParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoomDescription__RoomAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomDescriptionAccess().getRoomRoomDeclarationCrossReference_3_0()); }
		(
			{ before(grammarAccess.getRoomDescriptionAccess().getRoomRoomDeclarationTextParserRuleCall_3_0_1()); }
			ruleText
			{ after(grammarAccess.getRoomDescriptionAccess().getRoomRoomDeclarationTextParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getRoomDescriptionAccess().getRoomRoomDeclarationCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemDeclarationAccess().getNameTextParserRuleCall_1_0()); }
		ruleText
		{ after(grammarAccess.getItemDeclarationAccess().getNameTextParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDeclaration__RoomAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemDeclarationAccess().getRoomRoomDeclarationCrossReference_3_0()); }
		(
			{ before(grammarAccess.getItemDeclarationAccess().getRoomRoomDeclarationTextParserRuleCall_3_0_1()); }
			ruleText
			{ after(grammarAccess.getItemDeclarationAccess().getRoomRoomDeclarationTextParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getItemDeclarationAccess().getRoomRoomDeclarationCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDescription__ItemDescriptionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemDescriptionAccess().getItemDescriptionTextParserRuleCall_1_0()); }
		ruleText
		{ after(grammarAccess.getItemDescriptionAccess().getItemDescriptionTextParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDescription__ItemAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemDescriptionAccess().getItemItemDeclarationCrossReference_3_0()); }
		(
			{ before(grammarAccess.getItemDescriptionAccess().getItemItemDeclarationTextParserRuleCall_3_0_1()); }
			ruleText
			{ after(grammarAccess.getItemDescriptionAccess().getItemItemDeclarationTextParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getItemDescriptionAccess().getItemItemDeclarationCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionStatement__Room1Assignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionStatementAccess().getRoom1RoomDeclarationCrossReference_1_0()); }
		(
			{ before(grammarAccess.getDirectionStatementAccess().getRoom1RoomDeclarationTextParserRuleCall_1_0_1()); }
			ruleText
			{ after(grammarAccess.getDirectionStatementAccess().getRoom1RoomDeclarationTextParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getDirectionStatementAccess().getRoom1RoomDeclarationCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionStatement__DirectionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionStatementAccess().getDirectionDirectionEnumRuleCall_2_0()); }
		ruleDirection
		{ after(grammarAccess.getDirectionStatementAccess().getDirectionDirectionEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionStatement__Room2Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionStatementAccess().getRoom2RoomDeclarationCrossReference_3_0()); }
		(
			{ before(grammarAccess.getDirectionStatementAccess().getRoom2RoomDeclarationTextParserRuleCall_3_0_1()); }
			ruleText
			{ after(grammarAccess.getDirectionStatementAccess().getRoom2RoomDeclarationTextParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getDirectionStatementAccess().getRoom2RoomDeclarationCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Words__WordsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWordsAccess().getWordsTextParserRuleCall_0()); }
		ruleText
		{ after(grammarAccess.getWordsAccess().getWordsTextParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Symbol__SymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolAccess().getSymbolAlternatives_0()); }
		(rule__Symbol__SymbolAlternatives_0)
		{ after(grammarAccess.getSymbolAccess().getSymbolAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

/*
 * generated by Xtext 2.20.0
 */
package uk.ac.kcl.mde.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class RinformGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ReverseInformProgramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mde.Rinform.ReverseInformProgram");
		private final Assignment cSentencesAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cSentencesSentencePartParserRuleCall_0 = (RuleCall)cSentencesAssignment.eContents().get(0);
		
		//ReverseInformProgram:
		//	sentences+=SentencePart*;
		@Override public ParserRule getRule() { return rule; }
		
		//sentences+=SentencePart*
		public Assignment getSentencesAssignment() { return cSentencesAssignment; }
		
		//SentencePart
		public RuleCall getSentencesSentencePartParserRuleCall_0() { return cSentencesSentencePartParserRuleCall_0; }
	}
	public class SentencePartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mde.Rinform.SentencePart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRoomDeclarationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cItemDeclarationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCharacterDeclarationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRoomDescriptionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cItemDescriptionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cCharacterDescriptionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cRoomAliasParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cItemAliasParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cCharacterAliasParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cDirectionStatementParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cWordsParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		
		//SentencePart:
		//	RoomDeclaration | ItemDeclaration | CharacterDeclaration | RoomDescription | ItemDescription | CharacterDescription |
		//	RoomAlias | ItemAlias | CharacterAlias | DirectionStatement | Words;
		@Override public ParserRule getRule() { return rule; }
		
		//RoomDeclaration | ItemDeclaration | CharacterDeclaration | RoomDescription | ItemDescription | CharacterDescription |
		//RoomAlias | ItemAlias | CharacterAlias | DirectionStatement | Words
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RoomDeclaration
		public RuleCall getRoomDeclarationParserRuleCall_0() { return cRoomDeclarationParserRuleCall_0; }
		
		//ItemDeclaration
		public RuleCall getItemDeclarationParserRuleCall_1() { return cItemDeclarationParserRuleCall_1; }
		
		//CharacterDeclaration
		public RuleCall getCharacterDeclarationParserRuleCall_2() { return cCharacterDeclarationParserRuleCall_2; }
		
		//RoomDescription
		public RuleCall getRoomDescriptionParserRuleCall_3() { return cRoomDescriptionParserRuleCall_3; }
		
		//ItemDescription
		public RuleCall getItemDescriptionParserRuleCall_4() { return cItemDescriptionParserRuleCall_4; }
		
		//CharacterDescription
		public RuleCall getCharacterDescriptionParserRuleCall_5() { return cCharacterDescriptionParserRuleCall_5; }
		
		//RoomAlias
		public RuleCall getRoomAliasParserRuleCall_6() { return cRoomAliasParserRuleCall_6; }
		
		//ItemAlias
		public RuleCall getItemAliasParserRuleCall_7() { return cItemAliasParserRuleCall_7; }
		
		//CharacterAlias
		public RuleCall getCharacterAliasParserRuleCall_8() { return cCharacterAliasParserRuleCall_8; }
		
		//DirectionStatement
		public RuleCall getDirectionStatementParserRuleCall_9() { return cDirectionStatementParserRuleCall_9; }
		
		//Words
		public RuleCall getWordsParserRuleCall_10() { return cWordsParserRuleCall_10; }
	}
	public class RoomDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mde.Rinform.RoomDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameTextParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cRKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//RoomDeclaration:
		//	"r-" name=Text "-r";
		@Override public ParserRule getRule() { return rule; }
		
		//"r-" name=Text "-r"
		public Group getGroup() { return cGroup; }
		
		//"r-"
		public Keyword getRKeyword_0() { return cRKeyword_0; }
		
		//name=Text
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Text
		public RuleCall getNameTextParserRuleCall_1_0() { return cNameTextParserRuleCall_1_0; }
		
		//"-r"
		public Keyword getRKeyword_2() { return cRKeyword_2; }
	}
	public class RoomDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mde.Rinform.RoomDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRoomDescriptionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRoomDescriptionTextParserRuleCall_1_0 = (RuleCall)cRoomDescriptionAssignment_1.eContents().get(0);
		private final Keyword cRKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRoomAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cRoomRoomDeclarationCrossReference_4_0 = (CrossReference)cRoomAssignment_4.eContents().get(0);
		private final RuleCall cRoomRoomDeclarationTextParserRuleCall_4_0_1 = (RuleCall)cRoomRoomDeclarationCrossReference_4_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//RoomDescription:
		//	"{" roomDescription+=Text+ "!r" "[" room=[RoomDeclaration|Text] "]" "}";
		@Override public ParserRule getRule() { return rule; }
		
		//"{" roomDescription+=Text+ "!r" "[" room=[RoomDeclaration|Text] "]" "}"
		public Group getGroup() { return cGroup; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//roomDescription+=Text+
		public Assignment getRoomDescriptionAssignment_1() { return cRoomDescriptionAssignment_1; }
		
		//Text
		public RuleCall getRoomDescriptionTextParserRuleCall_1_0() { return cRoomDescriptionTextParserRuleCall_1_0; }
		
		//"!r"
		public Keyword getRKeyword_2() { return cRKeyword_2; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//room=[RoomDeclaration|Text]
		public Assignment getRoomAssignment_4() { return cRoomAssignment_4; }
		
		//[RoomDeclaration|Text]
		public CrossReference getRoomRoomDeclarationCrossReference_4_0() { return cRoomRoomDeclarationCrossReference_4_0; }
		
		//Text
		public RuleCall getRoomRoomDeclarationTextParserRuleCall_4_0_1() { return cRoomRoomDeclarationTextParserRuleCall_4_0_1; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class RoomAliasElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mde.Rinform.RoomAlias");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRoomAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cRoomRoomDeclarationCrossReference_2_0 = (CrossReference)cRoomAssignment_2.eContents().get(0);
		private final RuleCall cRoomRoomDeclarationTextParserRuleCall_2_0_1 = (RuleCall)cRoomRoomDeclarationCrossReference_2_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftSquareBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAliasesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAliasesTextParserRuleCall_5_1_0 = (RuleCall)cAliasesAssignment_5_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Keyword cEqualsSignKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftSquareBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cAliasesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cAliasesTextParserRuleCall_6_1_0 = (RuleCall)cAliasesAssignment_6_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		
		//RoomAlias:
		//	"!r" "[" room=[RoomDeclaration|Text] "]" "=" ("[" aliases+=Text+ "]" "=")* ("[" aliases+=Text+ "]");
		@Override public ParserRule getRule() { return rule; }
		
		//"!r" "[" room=[RoomDeclaration|Text] "]" "=" ("[" aliases+=Text+ "]" "=")* ("[" aliases+=Text+ "]")
		public Group getGroup() { return cGroup; }
		
		//"!r"
		public Keyword getRKeyword_0() { return cRKeyword_0; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//room=[RoomDeclaration|Text]
		public Assignment getRoomAssignment_2() { return cRoomAssignment_2; }
		
		//[RoomDeclaration|Text]
		public CrossReference getRoomRoomDeclarationCrossReference_2_0() { return cRoomRoomDeclarationCrossReference_2_0; }
		
		//Text
		public RuleCall getRoomRoomDeclarationTextParserRuleCall_2_0_1() { return cRoomRoomDeclarationTextParserRuleCall_2_0_1; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
		
		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//("[" aliases+=Text+ "]" "=")*
		public Group getGroup_5() { return cGroup_5; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_5_0() { return cLeftSquareBracketKeyword_5_0; }
		
		//aliases+=Text+
		public Assignment getAliasesAssignment_5_1() { return cAliasesAssignment_5_1; }
		
		//Text
		public RuleCall getAliasesTextParserRuleCall_5_1_0() { return cAliasesTextParserRuleCall_5_1_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_5_2() { return cRightSquareBracketKeyword_5_2; }
		
		//"="
		public Keyword getEqualsSignKeyword_5_3() { return cEqualsSignKeyword_5_3; }
		
		//("[" aliases+=Text+ "]")
		public Group getGroup_6() { return cGroup_6; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_6_0() { return cLeftSquareBracketKeyword_6_0; }
		
		//aliases+=Text+
		public Assignment getAliasesAssignment_6_1() { return cAliasesAssignment_6_1; }
		
		//Text
		public RuleCall getAliasesTextParserRuleCall_6_1_0() { return cAliasesTextParserRuleCall_6_1_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_6_2() { return cRightSquareBracketKeyword_6_2; }
	}
	public class ItemDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mde.Rinform.ItemDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cItemInRoomDeclarationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cContainerDeclarationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cItemInContainerDeclarationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ItemDeclaration:
		//	ItemInRoomDeclaration | ContainerDeclaration | ItemInContainerDeclaration;
		@Override public ParserRule getRule() { return rule; }
		
		//ItemInRoomDeclaration | ContainerDeclaration | ItemInContainerDeclaration
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ItemInRoomDeclaration
		public RuleCall getItemInRoomDeclarationParserRuleCall_0() { return cItemInRoomDeclarationParserRuleCall_0; }
		
		//ContainerDeclaration
		public RuleCall getContainerDeclarationParserRuleCall_1() { return cContainerDeclarationParserRuleCall_1; }
		
		//ItemInContainerDeclaration
		public RuleCall getItemInContainerDeclarationParserRuleCall_2() { return cItemInContainerDeclarationParserRuleCall_2; }
	}
	public class ContainerDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mde.Rinform.ContainerDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameTextParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cCKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRoomAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cRoomRoomDeclarationCrossReference_5_0 = (CrossReference)cRoomAssignment_5.eContents().get(0);
		private final RuleCall cRoomRoomDeclarationTextParserRuleCall_5_0_1 = (RuleCall)cRoomRoomDeclarationCrossReference_5_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ContainerDeclaration:
		//	"c-" name=Text "-c" "!r" "[" room=[RoomDeclaration|Text] "]";
		@Override public ParserRule getRule() { return rule; }
		
		//"c-" name=Text "-c" "!r" "[" room=[RoomDeclaration|Text] "]"
		public Group getGroup() { return cGroup; }
		
		//"c-"
		public Keyword getCKeyword_0() { return cCKeyword_0; }
		
		//name=Text
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Text
		public RuleCall getNameTextParserRuleCall_1_0() { return cNameTextParserRuleCall_1_0; }
		
		//"-c"
		public Keyword getCKeyword_2() { return cCKeyword_2; }
		
		//"!r"
		public Keyword getRKeyword_3() { return cRKeyword_3; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_4() { return cLeftSquareBracketKeyword_4; }
		
		//room=[RoomDeclaration|Text]
		public Assignment getRoomAssignment_5() { return cRoomAssignment_5; }
		
		//[RoomDeclaration|Text]
		public CrossReference getRoomRoomDeclarationCrossReference_5_0() { return cRoomRoomDeclarationCrossReference_5_0; }
		
		//Text
		public RuleCall getRoomRoomDeclarationTextParserRuleCall_5_0_1() { return cRoomRoomDeclarationTextParserRuleCall_5_0_1; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }
	}
	public class ItemInRoomDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mde.Rinform.ItemInRoomDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameTextParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cIKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRoomAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cRoomRoomDeclarationCrossReference_5_0 = (CrossReference)cRoomAssignment_5.eContents().get(0);
		private final RuleCall cRoomRoomDeclarationTextParserRuleCall_5_0_1 = (RuleCall)cRoomRoomDeclarationCrossReference_5_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ItemInRoomDeclaration:
		//	"i-" name=Text "-i" "!r" "[" room=[RoomDeclaration|Text] "]";
		@Override public ParserRule getRule() { return rule; }
		
		//"i-" name=Text "-i" "!r" "[" room=[RoomDeclaration|Text] "]"
		public Group getGroup() { return cGroup; }
		
		//"i-"
		public Keyword getIKeyword_0() { return cIKeyword_0; }
		
		//name=Text
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Text
		public RuleCall getNameTextParserRuleCall_1_0() { return cNameTextParserRuleCall_1_0; }
		
		//"-i"
		public Keyword getIKeyword_2() { return cIKeyword_2; }
		
		//"!r"
		public Keyword getRKeyword_3() { return cRKeyword_3; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_4() { return cLeftSquareBracketKeyword_4; }
		
		//room=[RoomDeclaration|Text]
		public Assignment getRoomAssignment_5() { return cRoomAssignment_5; }
		
		//[RoomDeclaration|Text]
		public CrossReference getRoomRoomDeclarationCrossReference_5_0() { return cRoomRoomDeclarationCrossReference_5_0; }
		
		//Text
		public RuleCall getRoomRoomDeclarationTextParserRuleCall_5_0_1() { return cRoomRoomDeclarationTextParserRuleCall_5_0_1; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }
	}
	public class ItemInContainerDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mde.Rinform.ItemInContainerDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameTextParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cIKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cContainerAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cContainerContainerDeclarationCrossReference_5_0 = (CrossReference)cContainerAssignment_5.eContents().get(0);
		private final RuleCall cContainerContainerDeclarationTextParserRuleCall_5_0_1 = (RuleCall)cContainerContainerDeclarationCrossReference_5_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ItemInContainerDeclaration:
		//	"i-" name=Text "-i" "!c" "[" container=[ContainerDeclaration|Text] "]";
		@Override public ParserRule getRule() { return rule; }
		
		//"i-" name=Text "-i" "!c" "[" container=[ContainerDeclaration|Text] "]"
		public Group getGroup() { return cGroup; }
		
		//"i-"
		public Keyword getIKeyword_0() { return cIKeyword_0; }
		
		//name=Text
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Text
		public RuleCall getNameTextParserRuleCall_1_0() { return cNameTextParserRuleCall_1_0; }
		
		//"-i"
		public Keyword getIKeyword_2() { return cIKeyword_2; }
		
		//"!c"
		public Keyword getCKeyword_3() { return cCKeyword_3; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_4() { return cLeftSquareBracketKeyword_4; }
		
		//container=[ContainerDeclaration|Text]
		public Assignment getContainerAssignment_5() { return cContainerAssignment_5; }
		
		//[ContainerDeclaration|Text]
		public CrossReference getContainerContainerDeclarationCrossReference_5_0() { return cContainerContainerDeclarationCrossReference_5_0; }
		
		//Text
		public RuleCall getContainerContainerDeclarationTextParserRuleCall_5_0_1() { return cContainerContainerDeclarationTextParserRuleCall_5_0_1; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }
	}
	public class ItemDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mde.Rinform.ItemDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cItemDescriptionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cItemDescriptionTextParserRuleCall_1_0 = (RuleCall)cItemDescriptionAssignment_1.eContents().get(0);
		private final Keyword cIKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cItemAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cItemItemDeclarationCrossReference_4_0 = (CrossReference)cItemAssignment_4.eContents().get(0);
		private final RuleCall cItemItemDeclarationTextParserRuleCall_4_0_1 = (RuleCall)cItemItemDeclarationCrossReference_4_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ItemDescription:
		//	"{" itemDescription+=Text+ "!i" "[" item=[ItemDeclaration|Text] "]" "}";
		@Override public ParserRule getRule() { return rule; }
		
		//"{" itemDescription+=Text+ "!i" "[" item=[ItemDeclaration|Text] "]" "}"
		public Group getGroup() { return cGroup; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//itemDescription+=Text+
		public Assignment getItemDescriptionAssignment_1() { return cItemDescriptionAssignment_1; }
		
		//Text
		public RuleCall getItemDescriptionTextParserRuleCall_1_0() { return cItemDescriptionTextParserRuleCall_1_0; }
		
		//"!i"
		public Keyword getIKeyword_2() { return cIKeyword_2; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//item=[ItemDeclaration|Text]
		public Assignment getItemAssignment_4() { return cItemAssignment_4; }
		
		//[ItemDeclaration|Text]
		public CrossReference getItemItemDeclarationCrossReference_4_0() { return cItemItemDeclarationCrossReference_4_0; }
		
		//Text
		public RuleCall getItemItemDeclarationTextParserRuleCall_4_0_1() { return cItemItemDeclarationTextParserRuleCall_4_0_1; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ItemAliasElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mde.Rinform.ItemAlias");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cItemAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cItemItemDeclarationCrossReference_2_0 = (CrossReference)cItemAssignment_2.eContents().get(0);
		private final RuleCall cItemItemDeclarationTextParserRuleCall_2_0_1 = (RuleCall)cItemItemDeclarationCrossReference_2_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftSquareBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAliasesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAliasesTextParserRuleCall_5_1_0 = (RuleCall)cAliasesAssignment_5_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Keyword cEqualsSignKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftSquareBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cAliasesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cAliasesTextParserRuleCall_6_1_0 = (RuleCall)cAliasesAssignment_6_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		
		//ItemAlias:
		//	"!i" "[" item=[ItemDeclaration|Text] "]" "=" ("[" aliases+=Text+ "]" "=")* ("[" aliases+=Text+ "]");
		@Override public ParserRule getRule() { return rule; }
		
		//"!i" "[" item=[ItemDeclaration|Text] "]" "=" ("[" aliases+=Text+ "]" "=")* ("[" aliases+=Text+ "]")
		public Group getGroup() { return cGroup; }
		
		//"!i"
		public Keyword getIKeyword_0() { return cIKeyword_0; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//item=[ItemDeclaration|Text]
		public Assignment getItemAssignment_2() { return cItemAssignment_2; }
		
		//[ItemDeclaration|Text]
		public CrossReference getItemItemDeclarationCrossReference_2_0() { return cItemItemDeclarationCrossReference_2_0; }
		
		//Text
		public RuleCall getItemItemDeclarationTextParserRuleCall_2_0_1() { return cItemItemDeclarationTextParserRuleCall_2_0_1; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
		
		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//("[" aliases+=Text+ "]" "=")*
		public Group getGroup_5() { return cGroup_5; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_5_0() { return cLeftSquareBracketKeyword_5_0; }
		
		//aliases+=Text+
		public Assignment getAliasesAssignment_5_1() { return cAliasesAssignment_5_1; }
		
		//Text
		public RuleCall getAliasesTextParserRuleCall_5_1_0() { return cAliasesTextParserRuleCall_5_1_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_5_2() { return cRightSquareBracketKeyword_5_2; }
		
		//"="
		public Keyword getEqualsSignKeyword_5_3() { return cEqualsSignKeyword_5_3; }
		
		//("[" aliases+=Text+ "]")
		public Group getGroup_6() { return cGroup_6; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_6_0() { return cLeftSquareBracketKeyword_6_0; }
		
		//aliases+=Text+
		public Assignment getAliasesAssignment_6_1() { return cAliasesAssignment_6_1; }
		
		//Text
		public RuleCall getAliasesTextParserRuleCall_6_1_0() { return cAliasesTextParserRuleCall_6_1_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_6_2() { return cRightSquareBracketKeyword_6_2; }
	}
	public class CharacterDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mde.Rinform.CharacterDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameTextParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cPKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRoomAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cRoomRoomDeclarationCrossReference_5_0 = (CrossReference)cRoomAssignment_5.eContents().get(0);
		private final RuleCall cRoomRoomDeclarationTextParserRuleCall_5_0_1 = (RuleCall)cRoomRoomDeclarationCrossReference_5_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//CharacterDeclaration:
		//	"p-" name=Text "-p" "!r" "[" room=[RoomDeclaration|Text] "]";
		@Override public ParserRule getRule() { return rule; }
		
		//"p-" name=Text "-p" "!r" "[" room=[RoomDeclaration|Text] "]"
		public Group getGroup() { return cGroup; }
		
		//"p-"
		public Keyword getPKeyword_0() { return cPKeyword_0; }
		
		//name=Text
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Text
		public RuleCall getNameTextParserRuleCall_1_0() { return cNameTextParserRuleCall_1_0; }
		
		//"-p"
		public Keyword getPKeyword_2() { return cPKeyword_2; }
		
		//"!r"
		public Keyword getRKeyword_3() { return cRKeyword_3; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_4() { return cLeftSquareBracketKeyword_4; }
		
		//room=[RoomDeclaration|Text]
		public Assignment getRoomAssignment_5() { return cRoomAssignment_5; }
		
		//[RoomDeclaration|Text]
		public CrossReference getRoomRoomDeclarationCrossReference_5_0() { return cRoomRoomDeclarationCrossReference_5_0; }
		
		//Text
		public RuleCall getRoomRoomDeclarationTextParserRuleCall_5_0_1() { return cRoomRoomDeclarationTextParserRuleCall_5_0_1; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }
	}
	public class CharacterDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mde.Rinform.CharacterDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPersonDescriptionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPersonDescriptionTextParserRuleCall_1_0 = (RuleCall)cPersonDescriptionAssignment_1.eContents().get(0);
		private final Keyword cPKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPersonAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cPersonCharacterDeclarationCrossReference_4_0 = (CrossReference)cPersonAssignment_4.eContents().get(0);
		private final RuleCall cPersonCharacterDeclarationTextParserRuleCall_4_0_1 = (RuleCall)cPersonCharacterDeclarationCrossReference_4_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//CharacterDescription:
		//	"{" personDescription+=Text+ "!p" "[" person=[CharacterDeclaration|Text] "]" "}";
		@Override public ParserRule getRule() { return rule; }
		
		//"{" personDescription+=Text+ "!p" "[" person=[CharacterDeclaration|Text] "]" "}"
		public Group getGroup() { return cGroup; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//personDescription+=Text+
		public Assignment getPersonDescriptionAssignment_1() { return cPersonDescriptionAssignment_1; }
		
		//Text
		public RuleCall getPersonDescriptionTextParserRuleCall_1_0() { return cPersonDescriptionTextParserRuleCall_1_0; }
		
		//"!p"
		public Keyword getPKeyword_2() { return cPKeyword_2; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//person=[CharacterDeclaration|Text]
		public Assignment getPersonAssignment_4() { return cPersonAssignment_4; }
		
		//[CharacterDeclaration|Text]
		public CrossReference getPersonCharacterDeclarationCrossReference_4_0() { return cPersonCharacterDeclarationCrossReference_4_0; }
		
		//Text
		public RuleCall getPersonCharacterDeclarationTextParserRuleCall_4_0_1() { return cPersonCharacterDeclarationTextParserRuleCall_4_0_1; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class CharacterAliasElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mde.Rinform.CharacterAlias");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCharacterAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cCharacterCharacterDeclarationCrossReference_2_0 = (CrossReference)cCharacterAssignment_2.eContents().get(0);
		private final RuleCall cCharacterCharacterDeclarationTextParserRuleCall_2_0_1 = (RuleCall)cCharacterCharacterDeclarationCrossReference_2_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftSquareBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAliasesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAliasesTextParserRuleCall_5_1_0 = (RuleCall)cAliasesAssignment_5_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Keyword cEqualsSignKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftSquareBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cAliasesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cAliasesTextParserRuleCall_6_1_0 = (RuleCall)cAliasesAssignment_6_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		
		//CharacterAlias:
		//	"!p" "[" character=[CharacterDeclaration|Text] "]" "=" ("[" aliases+=Text+ "]" "=")* ("[" aliases+=Text+ "]");
		@Override public ParserRule getRule() { return rule; }
		
		//"!p" "[" character=[CharacterDeclaration|Text] "]" "=" ("[" aliases+=Text+ "]" "=")* ("[" aliases+=Text+ "]")
		public Group getGroup() { return cGroup; }
		
		//"!p"
		public Keyword getPKeyword_0() { return cPKeyword_0; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//character=[CharacterDeclaration|Text]
		public Assignment getCharacterAssignment_2() { return cCharacterAssignment_2; }
		
		//[CharacterDeclaration|Text]
		public CrossReference getCharacterCharacterDeclarationCrossReference_2_0() { return cCharacterCharacterDeclarationCrossReference_2_0; }
		
		//Text
		public RuleCall getCharacterCharacterDeclarationTextParserRuleCall_2_0_1() { return cCharacterCharacterDeclarationTextParserRuleCall_2_0_1; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
		
		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//("[" aliases+=Text+ "]" "=")*
		public Group getGroup_5() { return cGroup_5; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_5_0() { return cLeftSquareBracketKeyword_5_0; }
		
		//aliases+=Text+
		public Assignment getAliasesAssignment_5_1() { return cAliasesAssignment_5_1; }
		
		//Text
		public RuleCall getAliasesTextParserRuleCall_5_1_0() { return cAliasesTextParserRuleCall_5_1_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_5_2() { return cRightSquareBracketKeyword_5_2; }
		
		//"="
		public Keyword getEqualsSignKeyword_5_3() { return cEqualsSignKeyword_5_3; }
		
		//("[" aliases+=Text+ "]")
		public Group getGroup_6() { return cGroup_6; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_6_0() { return cLeftSquareBracketKeyword_6_0; }
		
		//aliases+=Text+
		public Assignment getAliasesAssignment_6_1() { return cAliasesAssignment_6_1; }
		
		//Text
		public RuleCall getAliasesTextParserRuleCall_6_1_0() { return cAliasesTextParserRuleCall_6_1_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_6_2() { return cRightSquareBracketKeyword_6_2; }
	}
	public class DirectionStatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mde.Rinform.DirectionStatement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLessThanSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRoom1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRoom1RoomDeclarationCrossReference_1_0 = (CrossReference)cRoom1Assignment_1.eContents().get(0);
		private final RuleCall cRoom1RoomDeclarationTextParserRuleCall_1_0_1 = (RuleCall)cRoom1RoomDeclarationCrossReference_1_0.eContents().get(1);
		private final Assignment cDirectionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDirectionDirectionEnumRuleCall_2_0 = (RuleCall)cDirectionAssignment_2.eContents().get(0);
		private final Assignment cRoom2Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cRoom2RoomDeclarationCrossReference_3_0 = (CrossReference)cRoom2Assignment_3.eContents().get(0);
		private final RuleCall cRoom2RoomDeclarationTextParserRuleCall_3_0_1 = (RuleCall)cRoom2RoomDeclarationCrossReference_3_0.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//DirectionStatement:
		//	"<" room1=[RoomDeclaration|Text] direction=Direction room2=[RoomDeclaration|Text] ">";
		@Override public ParserRule getRule() { return rule; }
		
		//"<" room1=[RoomDeclaration|Text] direction=Direction room2=[RoomDeclaration|Text] ">"
		public Group getGroup() { return cGroup; }
		
		//"<"
		public Keyword getLessThanSignKeyword_0() { return cLessThanSignKeyword_0; }
		
		//room1=[RoomDeclaration|Text]
		public Assignment getRoom1Assignment_1() { return cRoom1Assignment_1; }
		
		//[RoomDeclaration|Text]
		public CrossReference getRoom1RoomDeclarationCrossReference_1_0() { return cRoom1RoomDeclarationCrossReference_1_0; }
		
		//Text
		public RuleCall getRoom1RoomDeclarationTextParserRuleCall_1_0_1() { return cRoom1RoomDeclarationTextParserRuleCall_1_0_1; }
		
		//direction=Direction
		public Assignment getDirectionAssignment_2() { return cDirectionAssignment_2; }
		
		//Direction
		public RuleCall getDirectionDirectionEnumRuleCall_2_0() { return cDirectionDirectionEnumRuleCall_2_0; }
		
		//room2=[RoomDeclaration|Text]
		public Assignment getRoom2Assignment_3() { return cRoom2Assignment_3; }
		
		//[RoomDeclaration|Text]
		public CrossReference getRoom2RoomDeclarationCrossReference_3_0() { return cRoom2RoomDeclarationCrossReference_3_0; }
		
		//Text
		public RuleCall getRoom2RoomDeclarationTextParserRuleCall_3_0_1() { return cRoom2RoomDeclarationTextParserRuleCall_3_0_1; }
		
		//">"
		public Keyword getGreaterThanSignKeyword_4() { return cGreaterThanSignKeyword_4; }
	}
	public class TextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mde.Rinform.Text");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSYMBOLParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Text:
		//	(ID | WS | SYMBOL)+;
		@Override public ParserRule getRule() { return rule; }
		
		//(ID | WS | SYMBOL)+
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//WS
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }
		
		//SYMBOL
		public RuleCall getSYMBOLParserRuleCall_2() { return cSYMBOLParserRuleCall_2; }
	}
	public class WordsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mde.Rinform.Words");
		private final Assignment cWordsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cWordsTextParserRuleCall_0 = (RuleCall)cWordsAssignment.eContents().get(0);
		
		//Words:
		//	words+=Text+;
		@Override public ParserRule getRule() { return rule; }
		
		//words+=Text+
		public Assignment getWordsAssignment() { return cWordsAssignment; }
		
		//Text
		public RuleCall getWordsTextParserRuleCall_0() { return cWordsTextParserRuleCall_0; }
	}
	public class SYMBOLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mde.Rinform.SYMBOL");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cFullStopKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cCommaKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cHyphenMinusKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cExclamationMarkKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cQuestionMarkKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cApostropheKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cLeftParenthesisKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cRightParenthesisKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cQuotationMarkKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		
		//SYMBOL hidden():
		//	'.' | ',' | ';' | ':' | '-' | '!' | '?' | '\'' | '(' | ')' | '\"';
		@Override public ParserRule getRule() { return rule; }
		
		//'.' | ',' | ';' | ':' | '-' | '!' | '?' | '\'' | '(' | ')' | '\"'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'.'
		public Keyword getFullStopKeyword_0() { return cFullStopKeyword_0; }
		
		//','
		public Keyword getCommaKeyword_1() { return cCommaKeyword_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_4() { return cHyphenMinusKeyword_4; }
		
		//'!'
		public Keyword getExclamationMarkKeyword_5() { return cExclamationMarkKeyword_5; }
		
		//'?'
		public Keyword getQuestionMarkKeyword_6() { return cQuestionMarkKeyword_6; }
		
		//'\''
		public Keyword getApostropheKeyword_7() { return cApostropheKeyword_7; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_8() { return cLeftParenthesisKeyword_8; }
		
		//')'
		public Keyword getRightParenthesisKeyword_9() { return cRightParenthesisKeyword_9; }
		
		//'\"'
		public Keyword getQuotationMarkKeyword_10() { return cQuotationMarkKeyword_10; }
	}
	
	public class DirectionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uk.ac.kcl.mde.Rinform.Direction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSouthEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSouthSouthKeyword_0_0 = (Keyword)cSouthEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNorthEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNorthNorthKeyword_1_0 = (Keyword)cNorthEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cEastEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cEastEastKeyword_2_0 = (Keyword)cEastEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cWestEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cWestWestKeyword_3_0 = (Keyword)cWestEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cBelowEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cBelowBelowKeyword_4_0 = (Keyword)cBelowEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cAboveEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cAboveAboveKeyword_5_0 = (Keyword)cAboveEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum Direction:
		//	South | North | East | West | Below | Above;
		public EnumRule getRule() { return rule; }
		
		//South | North | East | West | Below | Above
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//South
		public EnumLiteralDeclaration getSouthEnumLiteralDeclaration_0() { return cSouthEnumLiteralDeclaration_0; }
		
		//"South"
		public Keyword getSouthSouthKeyword_0_0() { return cSouthSouthKeyword_0_0; }
		
		//North
		public EnumLiteralDeclaration getNorthEnumLiteralDeclaration_1() { return cNorthEnumLiteralDeclaration_1; }
		
		//"North"
		public Keyword getNorthNorthKeyword_1_0() { return cNorthNorthKeyword_1_0; }
		
		//East
		public EnumLiteralDeclaration getEastEnumLiteralDeclaration_2() { return cEastEnumLiteralDeclaration_2; }
		
		//"East"
		public Keyword getEastEastKeyword_2_0() { return cEastEastKeyword_2_0; }
		
		//West
		public EnumLiteralDeclaration getWestEnumLiteralDeclaration_3() { return cWestEnumLiteralDeclaration_3; }
		
		//"West"
		public Keyword getWestWestKeyword_3_0() { return cWestWestKeyword_3_0; }
		
		//Below
		public EnumLiteralDeclaration getBelowEnumLiteralDeclaration_4() { return cBelowEnumLiteralDeclaration_4; }
		
		//"Below"
		public Keyword getBelowBelowKeyword_4_0() { return cBelowBelowKeyword_4_0; }
		
		//Above
		public EnumLiteralDeclaration getAboveEnumLiteralDeclaration_5() { return cAboveEnumLiteralDeclaration_5; }
		
		//"Above"
		public Keyword getAboveAboveKeyword_5_0() { return cAboveAboveKeyword_5_0; }
	}
	
	private final ReverseInformProgramElements pReverseInformProgram;
	private final SentencePartElements pSentencePart;
	private final RoomDeclarationElements pRoomDeclaration;
	private final RoomDescriptionElements pRoomDescription;
	private final RoomAliasElements pRoomAlias;
	private final ItemDeclarationElements pItemDeclaration;
	private final ContainerDeclarationElements pContainerDeclaration;
	private final ItemInRoomDeclarationElements pItemInRoomDeclaration;
	private final ItemInContainerDeclarationElements pItemInContainerDeclaration;
	private final ItemDescriptionElements pItemDescription;
	private final ItemAliasElements pItemAlias;
	private final CharacterDeclarationElements pCharacterDeclaration;
	private final CharacterDescriptionElements pCharacterDescription;
	private final CharacterAliasElements pCharacterAlias;
	private final DirectionStatementElements pDirectionStatement;
	private final DirectionElements eDirection;
	private final TextElements pText;
	private final WordsElements pWords;
	private final SYMBOLElements pSYMBOL;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public RinformGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pReverseInformProgram = new ReverseInformProgramElements();
		this.pSentencePart = new SentencePartElements();
		this.pRoomDeclaration = new RoomDeclarationElements();
		this.pRoomDescription = new RoomDescriptionElements();
		this.pRoomAlias = new RoomAliasElements();
		this.pItemDeclaration = new ItemDeclarationElements();
		this.pContainerDeclaration = new ContainerDeclarationElements();
		this.pItemInRoomDeclaration = new ItemInRoomDeclarationElements();
		this.pItemInContainerDeclaration = new ItemInContainerDeclarationElements();
		this.pItemDescription = new ItemDescriptionElements();
		this.pItemAlias = new ItemAliasElements();
		this.pCharacterDeclaration = new CharacterDeclarationElements();
		this.pCharacterDescription = new CharacterDescriptionElements();
		this.pCharacterAlias = new CharacterAliasElements();
		this.pDirectionStatement = new DirectionStatementElements();
		this.eDirection = new DirectionElements();
		this.pText = new TextElements();
		this.pWords = new WordsElements();
		this.pSYMBOL = new SYMBOLElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("uk.ac.kcl.mde.Rinform".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ReverseInformProgram:
	//	sentences+=SentencePart*;
	public ReverseInformProgramElements getReverseInformProgramAccess() {
		return pReverseInformProgram;
	}
	
	public ParserRule getReverseInformProgramRule() {
		return getReverseInformProgramAccess().getRule();
	}
	
	//SentencePart:
	//	RoomDeclaration | ItemDeclaration | CharacterDeclaration | RoomDescription | ItemDescription | CharacterDescription |
	//	RoomAlias | ItemAlias | CharacterAlias | DirectionStatement | Words;
	public SentencePartElements getSentencePartAccess() {
		return pSentencePart;
	}
	
	public ParserRule getSentencePartRule() {
		return getSentencePartAccess().getRule();
	}
	
	//RoomDeclaration:
	//	"r-" name=Text "-r";
	public RoomDeclarationElements getRoomDeclarationAccess() {
		return pRoomDeclaration;
	}
	
	public ParserRule getRoomDeclarationRule() {
		return getRoomDeclarationAccess().getRule();
	}
	
	//RoomDescription:
	//	"{" roomDescription+=Text+ "!r" "[" room=[RoomDeclaration|Text] "]" "}";
	public RoomDescriptionElements getRoomDescriptionAccess() {
		return pRoomDescription;
	}
	
	public ParserRule getRoomDescriptionRule() {
		return getRoomDescriptionAccess().getRule();
	}
	
	//RoomAlias:
	//	"!r" "[" room=[RoomDeclaration|Text] "]" "=" ("[" aliases+=Text+ "]" "=")* ("[" aliases+=Text+ "]");
	public RoomAliasElements getRoomAliasAccess() {
		return pRoomAlias;
	}
	
	public ParserRule getRoomAliasRule() {
		return getRoomAliasAccess().getRule();
	}
	
	//ItemDeclaration:
	//	ItemInRoomDeclaration | ContainerDeclaration | ItemInContainerDeclaration;
	public ItemDeclarationElements getItemDeclarationAccess() {
		return pItemDeclaration;
	}
	
	public ParserRule getItemDeclarationRule() {
		return getItemDeclarationAccess().getRule();
	}
	
	//ContainerDeclaration:
	//	"c-" name=Text "-c" "!r" "[" room=[RoomDeclaration|Text] "]";
	public ContainerDeclarationElements getContainerDeclarationAccess() {
		return pContainerDeclaration;
	}
	
	public ParserRule getContainerDeclarationRule() {
		return getContainerDeclarationAccess().getRule();
	}
	
	//ItemInRoomDeclaration:
	//	"i-" name=Text "-i" "!r" "[" room=[RoomDeclaration|Text] "]";
	public ItemInRoomDeclarationElements getItemInRoomDeclarationAccess() {
		return pItemInRoomDeclaration;
	}
	
	public ParserRule getItemInRoomDeclarationRule() {
		return getItemInRoomDeclarationAccess().getRule();
	}
	
	//ItemInContainerDeclaration:
	//	"i-" name=Text "-i" "!c" "[" container=[ContainerDeclaration|Text] "]";
	public ItemInContainerDeclarationElements getItemInContainerDeclarationAccess() {
		return pItemInContainerDeclaration;
	}
	
	public ParserRule getItemInContainerDeclarationRule() {
		return getItemInContainerDeclarationAccess().getRule();
	}
	
	//ItemDescription:
	//	"{" itemDescription+=Text+ "!i" "[" item=[ItemDeclaration|Text] "]" "}";
	public ItemDescriptionElements getItemDescriptionAccess() {
		return pItemDescription;
	}
	
	public ParserRule getItemDescriptionRule() {
		return getItemDescriptionAccess().getRule();
	}
	
	//ItemAlias:
	//	"!i" "[" item=[ItemDeclaration|Text] "]" "=" ("[" aliases+=Text+ "]" "=")* ("[" aliases+=Text+ "]");
	public ItemAliasElements getItemAliasAccess() {
		return pItemAlias;
	}
	
	public ParserRule getItemAliasRule() {
		return getItemAliasAccess().getRule();
	}
	
	//CharacterDeclaration:
	//	"p-" name=Text "-p" "!r" "[" room=[RoomDeclaration|Text] "]";
	public CharacterDeclarationElements getCharacterDeclarationAccess() {
		return pCharacterDeclaration;
	}
	
	public ParserRule getCharacterDeclarationRule() {
		return getCharacterDeclarationAccess().getRule();
	}
	
	//CharacterDescription:
	//	"{" personDescription+=Text+ "!p" "[" person=[CharacterDeclaration|Text] "]" "}";
	public CharacterDescriptionElements getCharacterDescriptionAccess() {
		return pCharacterDescription;
	}
	
	public ParserRule getCharacterDescriptionRule() {
		return getCharacterDescriptionAccess().getRule();
	}
	
	//CharacterAlias:
	//	"!p" "[" character=[CharacterDeclaration|Text] "]" "=" ("[" aliases+=Text+ "]" "=")* ("[" aliases+=Text+ "]");
	public CharacterAliasElements getCharacterAliasAccess() {
		return pCharacterAlias;
	}
	
	public ParserRule getCharacterAliasRule() {
		return getCharacterAliasAccess().getRule();
	}
	
	//DirectionStatement:
	//	"<" room1=[RoomDeclaration|Text] direction=Direction room2=[RoomDeclaration|Text] ">";
	public DirectionStatementElements getDirectionStatementAccess() {
		return pDirectionStatement;
	}
	
	public ParserRule getDirectionStatementRule() {
		return getDirectionStatementAccess().getRule();
	}
	
	//enum Direction:
	//	South | North | East | West | Below | Above;
	public DirectionElements getDirectionAccess() {
		return eDirection;
	}
	
	public EnumRule getDirectionRule() {
		return getDirectionAccess().getRule();
	}
	
	//Text:
	//	(ID | WS | SYMBOL)+;
	public TextElements getTextAccess() {
		return pText;
	}
	
	public ParserRule getTextRule() {
		return getTextAccess().getRule();
	}
	
	//Words:
	//	words+=Text+;
	public WordsElements getWordsAccess() {
		return pWords;
	}
	
	public ParserRule getWordsRule() {
		return getWordsAccess().getRule();
	}
	
	//SYMBOL hidden():
	//	'.' | ',' | ';' | ':' | '-' | '!' | '?' | '\'' | '(' | ')' | '\"';
	public SYMBOLElements getSYMBOLAccess() {
		return pSYMBOL;
	}
	
	public ParserRule getSYMBOLRule() {
		return getSYMBOLAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}

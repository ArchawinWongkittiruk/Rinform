/*
 * generated by Xtext 2.20.0
 */
grammar InternalRinform;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package uk.ac.kcl.mde.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package uk.ac.kcl.mde.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import uk.ac.kcl.mde.services.RinformGrammarAccess;

}

@parser::members {

 	private RinformGrammarAccess grammarAccess;

    public InternalRinformParser(TokenStream input, RinformGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ReverseInformProgram";
   	}

   	@Override
   	protected RinformGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleReverseInformProgram
entryRuleReverseInformProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReverseInformProgramRule()); }
	iv_ruleReverseInformProgram=ruleReverseInformProgram
	{ $current=$iv_ruleReverseInformProgram.current; }
	EOF;

// Rule ReverseInformProgram
ruleReverseInformProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getReverseInformProgramAccess().getSentencesSentencePartParserRuleCall_0());
			}
			lv_sentences_0_0=ruleSentencePart
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getReverseInformProgramRule());
				}
				add(
					$current,
					"sentences",
					lv_sentences_0_0,
					"uk.ac.kcl.mde.Rinform.SentencePart");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleSentencePart
entryRuleSentencePart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSentencePartRule()); }
	iv_ruleSentencePart=ruleSentencePart
	{ $current=$iv_ruleSentencePart.current; }
	EOF;

// Rule SentencePart
ruleSentencePart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSentencePartAccess().getRoomDeclarationParserRuleCall_0());
		}
		this_RoomDeclaration_0=ruleRoomDeclaration
		{
			$current = $this_RoomDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSentencePartAccess().getItemDeclarationParserRuleCall_1());
		}
		this_ItemDeclaration_1=ruleItemDeclaration
		{
			$current = $this_ItemDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSentencePartAccess().getCharacterDeclarationParserRuleCall_2());
		}
		this_CharacterDeclaration_2=ruleCharacterDeclaration
		{
			$current = $this_CharacterDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSentencePartAccess().getRoomDescriptionParserRuleCall_3());
		}
		this_RoomDescription_3=ruleRoomDescription
		{
			$current = $this_RoomDescription_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSentencePartAccess().getItemDescriptionParserRuleCall_4());
		}
		this_ItemDescription_4=ruleItemDescription
		{
			$current = $this_ItemDescription_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSentencePartAccess().getCharacterDescriptionParserRuleCall_5());
		}
		this_CharacterDescription_5=ruleCharacterDescription
		{
			$current = $this_CharacterDescription_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSentencePartAccess().getRoomAliasParserRuleCall_6());
		}
		this_RoomAlias_6=ruleRoomAlias
		{
			$current = $this_RoomAlias_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSentencePartAccess().getItemAliasParserRuleCall_7());
		}
		this_ItemAlias_7=ruleItemAlias
		{
			$current = $this_ItemAlias_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSentencePartAccess().getCharacterAliasParserRuleCall_8());
		}
		this_CharacterAlias_8=ruleCharacterAlias
		{
			$current = $this_CharacterAlias_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSentencePartAccess().getDirectionStatementParserRuleCall_9());
		}
		this_DirectionStatement_9=ruleDirectionStatement
		{
			$current = $this_DirectionStatement_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSentencePartAccess().getWordsParserRuleCall_10());
		}
		this_Words_10=ruleWords
		{
			$current = $this_Words_10.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRoomDeclaration
entryRuleRoomDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoomDeclarationRule()); }
	iv_ruleRoomDeclaration=ruleRoomDeclaration
	{ $current=$iv_ruleRoomDeclaration.current; }
	EOF;

// Rule RoomDeclaration
ruleRoomDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='r-'
		{
			newLeafNode(otherlv_0, grammarAccess.getRoomDeclarationAccess().getRKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRoomDeclarationAccess().getNameTextParserRuleCall_1_0());
				}
				lv_name_1_0=ruleText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoomDeclarationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"uk.ac.kcl.mde.Rinform.Text");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='-r'
		{
			newLeafNode(otherlv_2, grammarAccess.getRoomDeclarationAccess().getRKeyword_2());
		}
	)
;

// Entry rule entryRuleRoomDescription
entryRuleRoomDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoomDescriptionRule()); }
	iv_ruleRoomDescription=ruleRoomDescription
	{ $current=$iv_ruleRoomDescription.current; }
	EOF;

// Rule RoomDescription
ruleRoomDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getRoomDescriptionAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRoomDescriptionAccess().getRoomDescriptionTextParserRuleCall_1_0());
				}
				lv_roomDescription_1_0=ruleText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoomDescriptionRule());
					}
					add(
						$current,
						"roomDescription",
						lv_roomDescription_1_0,
						"uk.ac.kcl.mde.Rinform.Text");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2='!r'
		{
			newLeafNode(otherlv_2, grammarAccess.getRoomDescriptionAccess().getRKeyword_2());
		}
		otherlv_3='['
		{
			newLeafNode(otherlv_3, grammarAccess.getRoomDescriptionAccess().getLeftSquareBracketKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoomDescriptionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRoomDescriptionAccess().getRoomRoomDeclarationCrossReference_4_0());
				}
				ruleText
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getRoomDescriptionAccess().getRightSquareBracketKeyword_5());
		}
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getRoomDescriptionAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleRoomAlias
entryRuleRoomAlias returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoomAliasRule()); }
	iv_ruleRoomAlias=ruleRoomAlias
	{ $current=$iv_ruleRoomAlias.current; }
	EOF;

// Rule RoomAlias
ruleRoomAlias returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='!r'
		{
			newLeafNode(otherlv_0, grammarAccess.getRoomAliasAccess().getRKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getRoomAliasAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoomAliasRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRoomAliasAccess().getRoomRoomDeclarationCrossReference_2_0());
				}
				ruleText
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getRoomAliasAccess().getRightSquareBracketKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getRoomAliasAccess().getEqualsSignKeyword_4());
		}
		(
			otherlv_5='['
			{
				newLeafNode(otherlv_5, grammarAccess.getRoomAliasAccess().getLeftSquareBracketKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRoomAliasAccess().getAliasesTextParserRuleCall_5_1_0());
					}
					lv_aliases_6_0=ruleText
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRoomAliasRule());
						}
						add(
							$current,
							"aliases",
							lv_aliases_6_0,
							"uk.ac.kcl.mde.Rinform.Text");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getRoomAliasAccess().getRightSquareBracketKeyword_5_2());
			}
			otherlv_8='='
			{
				newLeafNode(otherlv_8, grammarAccess.getRoomAliasAccess().getEqualsSignKeyword_5_3());
			}
		)*
		(
			otherlv_9='['
			{
				newLeafNode(otherlv_9, grammarAccess.getRoomAliasAccess().getLeftSquareBracketKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRoomAliasAccess().getAliasesTextParserRuleCall_6_1_0());
					}
					lv_aliases_10_0=ruleText
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRoomAliasRule());
						}
						add(
							$current,
							"aliases",
							lv_aliases_10_0,
							"uk.ac.kcl.mde.Rinform.Text");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_11=']'
			{
				newLeafNode(otherlv_11, grammarAccess.getRoomAliasAccess().getRightSquareBracketKeyword_6_2());
			}
		)
	)
;

// Entry rule entryRuleItemDeclaration
entryRuleItemDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemDeclarationRule()); }
	iv_ruleItemDeclaration=ruleItemDeclaration
	{ $current=$iv_ruleItemDeclaration.current; }
	EOF;

// Rule ItemDeclaration
ruleItemDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getItemDeclarationAccess().getItemInRoomDeclarationParserRuleCall_0());
		}
		this_ItemInRoomDeclaration_0=ruleItemInRoomDeclaration
		{
			$current = $this_ItemInRoomDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getItemDeclarationAccess().getContainerDeclarationParserRuleCall_1());
		}
		this_ContainerDeclaration_1=ruleContainerDeclaration
		{
			$current = $this_ContainerDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getItemDeclarationAccess().getItemInContainerDeclarationParserRuleCall_2());
		}
		this_ItemInContainerDeclaration_2=ruleItemInContainerDeclaration
		{
			$current = $this_ItemInContainerDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleContainerDeclaration
entryRuleContainerDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContainerDeclarationRule()); }
	iv_ruleContainerDeclaration=ruleContainerDeclaration
	{ $current=$iv_ruleContainerDeclaration.current; }
	EOF;

// Rule ContainerDeclaration
ruleContainerDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='c-'
		{
			newLeafNode(otherlv_0, grammarAccess.getContainerDeclarationAccess().getCKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContainerDeclarationAccess().getNameTextParserRuleCall_1_0());
				}
				lv_name_1_0=ruleText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContainerDeclarationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"uk.ac.kcl.mde.Rinform.Text");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='-c'
		{
			newLeafNode(otherlv_2, grammarAccess.getContainerDeclarationAccess().getCKeyword_2());
		}
		otherlv_3='!r'
		{
			newLeafNode(otherlv_3, grammarAccess.getContainerDeclarationAccess().getRKeyword_3());
		}
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getContainerDeclarationAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContainerDeclarationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getContainerDeclarationAccess().getRoomRoomDeclarationCrossReference_5_0());
				}
				ruleText
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getContainerDeclarationAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleItemInRoomDeclaration
entryRuleItemInRoomDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemInRoomDeclarationRule()); }
	iv_ruleItemInRoomDeclaration=ruleItemInRoomDeclaration
	{ $current=$iv_ruleItemInRoomDeclaration.current; }
	EOF;

// Rule ItemInRoomDeclaration
ruleItemInRoomDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='i-'
		{
			newLeafNode(otherlv_0, grammarAccess.getItemInRoomDeclarationAccess().getIKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getItemInRoomDeclarationAccess().getNameTextParserRuleCall_1_0());
				}
				lv_name_1_0=ruleText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getItemInRoomDeclarationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"uk.ac.kcl.mde.Rinform.Text");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='-i'
		{
			newLeafNode(otherlv_2, grammarAccess.getItemInRoomDeclarationAccess().getIKeyword_2());
		}
		otherlv_3='!r'
		{
			newLeafNode(otherlv_3, grammarAccess.getItemInRoomDeclarationAccess().getRKeyword_3());
		}
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getItemInRoomDeclarationAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getItemInRoomDeclarationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getItemInRoomDeclarationAccess().getRoomRoomDeclarationCrossReference_5_0());
				}
				ruleText
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getItemInRoomDeclarationAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleItemInContainerDeclaration
entryRuleItemInContainerDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemInContainerDeclarationRule()); }
	iv_ruleItemInContainerDeclaration=ruleItemInContainerDeclaration
	{ $current=$iv_ruleItemInContainerDeclaration.current; }
	EOF;

// Rule ItemInContainerDeclaration
ruleItemInContainerDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='i-'
		{
			newLeafNode(otherlv_0, grammarAccess.getItemInContainerDeclarationAccess().getIKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getItemInContainerDeclarationAccess().getNameTextParserRuleCall_1_0());
				}
				lv_name_1_0=ruleText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getItemInContainerDeclarationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"uk.ac.kcl.mde.Rinform.Text");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='-i'
		{
			newLeafNode(otherlv_2, grammarAccess.getItemInContainerDeclarationAccess().getIKeyword_2());
		}
		otherlv_3='!c'
		{
			newLeafNode(otherlv_3, grammarAccess.getItemInContainerDeclarationAccess().getCKeyword_3());
		}
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getItemInContainerDeclarationAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getItemInContainerDeclarationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getItemInContainerDeclarationAccess().getContainerContainerDeclarationCrossReference_5_0());
				}
				ruleText
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getItemInContainerDeclarationAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleItemDescription
entryRuleItemDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemDescriptionRule()); }
	iv_ruleItemDescription=ruleItemDescription
	{ $current=$iv_ruleItemDescription.current; }
	EOF;

// Rule ItemDescription
ruleItemDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getItemDescriptionAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getItemDescriptionAccess().getItemDescriptionTextParserRuleCall_1_0());
				}
				lv_itemDescription_1_0=ruleText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getItemDescriptionRule());
					}
					add(
						$current,
						"itemDescription",
						lv_itemDescription_1_0,
						"uk.ac.kcl.mde.Rinform.Text");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2='!i'
		{
			newLeafNode(otherlv_2, grammarAccess.getItemDescriptionAccess().getIKeyword_2());
		}
		otherlv_3='['
		{
			newLeafNode(otherlv_3, grammarAccess.getItemDescriptionAccess().getLeftSquareBracketKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getItemDescriptionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getItemDescriptionAccess().getItemItemDeclarationCrossReference_4_0());
				}
				ruleText
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getItemDescriptionAccess().getRightSquareBracketKeyword_5());
		}
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getItemDescriptionAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleItemAlias
entryRuleItemAlias returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemAliasRule()); }
	iv_ruleItemAlias=ruleItemAlias
	{ $current=$iv_ruleItemAlias.current; }
	EOF;

// Rule ItemAlias
ruleItemAlias returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='!i'
		{
			newLeafNode(otherlv_0, grammarAccess.getItemAliasAccess().getIKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getItemAliasAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getItemAliasRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getItemAliasAccess().getItemItemDeclarationCrossReference_2_0());
				}
				ruleText
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getItemAliasAccess().getRightSquareBracketKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getItemAliasAccess().getEqualsSignKeyword_4());
		}
		(
			otherlv_5='['
			{
				newLeafNode(otherlv_5, grammarAccess.getItemAliasAccess().getLeftSquareBracketKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getItemAliasAccess().getAliasesTextParserRuleCall_5_1_0());
					}
					lv_aliases_6_0=ruleText
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getItemAliasRule());
						}
						add(
							$current,
							"aliases",
							lv_aliases_6_0,
							"uk.ac.kcl.mde.Rinform.Text");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getItemAliasAccess().getRightSquareBracketKeyword_5_2());
			}
			otherlv_8='='
			{
				newLeafNode(otherlv_8, grammarAccess.getItemAliasAccess().getEqualsSignKeyword_5_3());
			}
		)*
		(
			otherlv_9='['
			{
				newLeafNode(otherlv_9, grammarAccess.getItemAliasAccess().getLeftSquareBracketKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getItemAliasAccess().getAliasesTextParserRuleCall_6_1_0());
					}
					lv_aliases_10_0=ruleText
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getItemAliasRule());
						}
						add(
							$current,
							"aliases",
							lv_aliases_10_0,
							"uk.ac.kcl.mde.Rinform.Text");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_11=']'
			{
				newLeafNode(otherlv_11, grammarAccess.getItemAliasAccess().getRightSquareBracketKeyword_6_2());
			}
		)
	)
;

// Entry rule entryRuleCharacterDeclaration
entryRuleCharacterDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCharacterDeclarationRule()); }
	iv_ruleCharacterDeclaration=ruleCharacterDeclaration
	{ $current=$iv_ruleCharacterDeclaration.current; }
	EOF;

// Rule CharacterDeclaration
ruleCharacterDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='p-'
		{
			newLeafNode(otherlv_0, grammarAccess.getCharacterDeclarationAccess().getPKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCharacterDeclarationAccess().getNameTextParserRuleCall_1_0());
				}
				lv_name_1_0=ruleText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCharacterDeclarationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"uk.ac.kcl.mde.Rinform.Text");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='-p'
		{
			newLeafNode(otherlv_2, grammarAccess.getCharacterDeclarationAccess().getPKeyword_2());
		}
		otherlv_3='!r'
		{
			newLeafNode(otherlv_3, grammarAccess.getCharacterDeclarationAccess().getRKeyword_3());
		}
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getCharacterDeclarationAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCharacterDeclarationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getCharacterDeclarationAccess().getRoomRoomDeclarationCrossReference_5_0());
				}
				ruleText
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getCharacterDeclarationAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleCharacterDescription
entryRuleCharacterDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCharacterDescriptionRule()); }
	iv_ruleCharacterDescription=ruleCharacterDescription
	{ $current=$iv_ruleCharacterDescription.current; }
	EOF;

// Rule CharacterDescription
ruleCharacterDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getCharacterDescriptionAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCharacterDescriptionAccess().getPersonDescriptionTextParserRuleCall_1_0());
				}
				lv_personDescription_1_0=ruleText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCharacterDescriptionRule());
					}
					add(
						$current,
						"personDescription",
						lv_personDescription_1_0,
						"uk.ac.kcl.mde.Rinform.Text");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2='!p'
		{
			newLeafNode(otherlv_2, grammarAccess.getCharacterDescriptionAccess().getPKeyword_2());
		}
		otherlv_3='['
		{
			newLeafNode(otherlv_3, grammarAccess.getCharacterDescriptionAccess().getLeftSquareBracketKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCharacterDescriptionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getCharacterDescriptionAccess().getPersonCharacterDeclarationCrossReference_4_0());
				}
				ruleText
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getCharacterDescriptionAccess().getRightSquareBracketKeyword_5());
		}
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getCharacterDescriptionAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleCharacterAlias
entryRuleCharacterAlias returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCharacterAliasRule()); }
	iv_ruleCharacterAlias=ruleCharacterAlias
	{ $current=$iv_ruleCharacterAlias.current; }
	EOF;

// Rule CharacterAlias
ruleCharacterAlias returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='!p'
		{
			newLeafNode(otherlv_0, grammarAccess.getCharacterAliasAccess().getPKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getCharacterAliasAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCharacterAliasRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getCharacterAliasAccess().getCharacterCharacterDeclarationCrossReference_2_0());
				}
				ruleText
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getCharacterAliasAccess().getRightSquareBracketKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getCharacterAliasAccess().getEqualsSignKeyword_4());
		}
		(
			otherlv_5='['
			{
				newLeafNode(otherlv_5, grammarAccess.getCharacterAliasAccess().getLeftSquareBracketKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCharacterAliasAccess().getAliasesTextParserRuleCall_5_1_0());
					}
					lv_aliases_6_0=ruleText
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCharacterAliasRule());
						}
						add(
							$current,
							"aliases",
							lv_aliases_6_0,
							"uk.ac.kcl.mde.Rinform.Text");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getCharacterAliasAccess().getRightSquareBracketKeyword_5_2());
			}
			otherlv_8='='
			{
				newLeafNode(otherlv_8, grammarAccess.getCharacterAliasAccess().getEqualsSignKeyword_5_3());
			}
		)*
		(
			otherlv_9='['
			{
				newLeafNode(otherlv_9, grammarAccess.getCharacterAliasAccess().getLeftSquareBracketKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCharacterAliasAccess().getAliasesTextParserRuleCall_6_1_0());
					}
					lv_aliases_10_0=ruleText
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCharacterAliasRule());
						}
						add(
							$current,
							"aliases",
							lv_aliases_10_0,
							"uk.ac.kcl.mde.Rinform.Text");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_11=']'
			{
				newLeafNode(otherlv_11, grammarAccess.getCharacterAliasAccess().getRightSquareBracketKeyword_6_2());
			}
		)
	)
;

// Entry rule entryRuleDirectionStatement
entryRuleDirectionStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDirectionStatementRule()); }
	iv_ruleDirectionStatement=ruleDirectionStatement
	{ $current=$iv_ruleDirectionStatement.current; }
	EOF;

// Rule DirectionStatement
ruleDirectionStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<'
		{
			newLeafNode(otherlv_0, grammarAccess.getDirectionStatementAccess().getLessThanSignKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDirectionStatementRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDirectionStatementAccess().getRoom1RoomDeclarationCrossReference_1_0());
				}
				ruleText
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDirectionStatementAccess().getDirectionDirectionEnumRuleCall_2_0());
				}
				lv_direction_2_0=ruleDirection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDirectionStatementRule());
					}
					set(
						$current,
						"direction",
						lv_direction_2_0,
						"uk.ac.kcl.mde.Rinform.Direction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDirectionStatementRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDirectionStatementAccess().getRoom2RoomDeclarationCrossReference_3_0());
				}
				ruleText
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='>'
		{
			newLeafNode(otherlv_4, grammarAccess.getDirectionStatementAccess().getGreaterThanSignKeyword_4());
		}
	)
;

// Entry rule entryRuleText
entryRuleText returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	iv_ruleText=ruleText
	{ $current=$iv_ruleText.current.getText(); }
	EOF;

// Rule Text
ruleText returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getTextAccess().getIDTerminalRuleCall_0());
		}
		    |
		this_WS_1=RULE_WS
		{
			$current.merge(this_WS_1);
		}
		{
			newLeafNode(this_WS_1, grammarAccess.getTextAccess().getWSTerminalRuleCall_1());
		}
		    |
		{
			newCompositeNode(grammarAccess.getTextAccess().getSYMBOLParserRuleCall_2());
		}
		this_SYMBOL_2=ruleSYMBOL
		{
			$current.merge(this_SYMBOL_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)+
;

// Entry rule entryRuleWords
entryRuleWords returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWordsRule()); }
	iv_ruleWords=ruleWords
	{ $current=$iv_ruleWords.current; }
	EOF;

// Rule Words
ruleWords returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getWordsAccess().getWordsTextParserRuleCall_0());
			}
			lv_words_0_0=ruleText
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getWordsRule());
				}
				add(
					$current,
					"words",
					lv_words_0_0,
					"uk.ac.kcl.mde.Rinform.Text");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleSYMBOL
entryRuleSYMBOL returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getSYMBOLRule()); }
	iv_ruleSYMBOL=ruleSYMBOL
	{ $current=$iv_ruleSYMBOL.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule SYMBOL
ruleSYMBOL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLAccess().getFullStopKeyword_0());
		}
		    |
		kw=','
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLAccess().getCommaKeyword_1());
		}
		    |
		kw=';'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLAccess().getSemicolonKeyword_2());
		}
		    |
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLAccess().getColonKeyword_3());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLAccess().getHyphenMinusKeyword_4());
		}
		    |
		kw='!'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLAccess().getExclamationMarkKeyword_5());
		}
		    |
		kw='?'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLAccess().getQuestionMarkKeyword_6());
		}
		    |
		kw='\''
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLAccess().getApostropheKeyword_7());
		}
		    |
		kw='('
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLAccess().getLeftParenthesisKeyword_8());
		}
		    |
		kw=')'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLAccess().getRightParenthesisKeyword_9());
		}
		    |
		kw='"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSYMBOLAccess().getQuotationMarkKeyword_10());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Rule Direction
ruleDirection returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='South'
			{
				$current = grammarAccess.getDirectionAccess().getSouthEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDirectionAccess().getSouthEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='North'
			{
				$current = grammarAccess.getDirectionAccess().getNorthEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDirectionAccess().getNorthEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='East'
			{
				$current = grammarAccess.getDirectionAccess().getEastEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDirectionAccess().getEastEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='West'
			{
				$current = grammarAccess.getDirectionAccess().getWestEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDirectionAccess().getWestEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Below'
			{
				$current = grammarAccess.getDirectionAccess().getBelowEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getDirectionAccess().getBelowEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='Above'
			{
				$current = grammarAccess.getDirectionAccess().getAboveEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getDirectionAccess().getAboveEnumLiteralDeclaration_5());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
